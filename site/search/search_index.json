{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dConstruct d.ASH SDK The dConstruct d.ASH SDK is an SDK (software development kit) for autonomous robot navigation. In the future, this SDK can potentially be used for other robots. Autonomy Preparation There are 3 main components encompassing the d.ASH SDK: d.ASH Server ROS Driver d.ASH Autonomy Controller Custom GUI If you decide to use your own GUI in place of the d.ASH Autonomy Controller , or you do not want to run autonomy, you will still need to implement the d.ASH Server and the ROS Driver to operate your robot. d.ASH Server The d.ASH Server acts as the main server responsible for sending control commands to the robot. At the same time, the d.ASH Server also broadcasts secured data to any given remote systems. ROS Driver The ROS Driver is a ROS node that has autonomy functions onboard to make your robot accessible from ROS. The ROS Driver handles computational calls and sends control commands to the d.ASH Server. In turn, the d.ASH Server relays the autonomy commands to the robot for execution. d.ASH Autonomy Controller The d.ASH Autonomy Controller is the GUI (graphical user interface) for the d.ASH SDK. It encompasses the interactive visual components for d.ASH's software and displays different elements for users to interact with to control your robot.","title":"Home"},{"location":"#dconstruct-dash-sdk","text":"The dConstruct d.ASH SDK is an SDK (software development kit) for autonomous robot navigation. In the future, this SDK can potentially be used for other robots.","title":"dConstruct d.ASH SDK"},{"location":"#autonomy-preparation","text":"There are 3 main components encompassing the d.ASH SDK: d.ASH Server ROS Driver d.ASH Autonomy Controller Custom GUI If you decide to use your own GUI in place of the d.ASH Autonomy Controller , or you do not want to run autonomy, you will still need to implement the d.ASH Server and the ROS Driver to operate your robot.","title":"Autonomy Preparation"},{"location":"#dash-server","text":"The d.ASH Server acts as the main server responsible for sending control commands to the robot. At the same time, the d.ASH Server also broadcasts secured data to any given remote systems.","title":"d.ASH Server"},{"location":"#ros-driver","text":"The ROS Driver is a ROS node that has autonomy functions onboard to make your robot accessible from ROS. The ROS Driver handles computational calls and sends control commands to the d.ASH Server. In turn, the d.ASH Server relays the autonomy commands to the robot for execution.","title":"ROS Driver"},{"location":"#dash-autonomy-controller","text":"The d.ASH Autonomy Controller is the GUI (graphical user interface) for the d.ASH SDK. It encompasses the interactive visual components for d.ASH's software and displays different elements for users to interact with to control your robot.","title":"d.ASH Autonomy Controller"},{"location":"getting-started/UE-client/","text":"Quod sis undas est Tridentifer contra miserrimus Convicia et verti agros cum Lorem markdownum quae. Dubiaque quos cultros; quo tremulis eris admonitus in infamis memorant natis equi dicitur mixta aliquid vulnera Nixosque certamine! Simus quoque est animasque iaculum arcum. Cur est ancora fuerat dona de altior adducto miserisque, sata quot! Phoebique vultu Ianthen succiduo vacuas et aegide, genetrix dicere communia et certus tantum quique incalfacit. Fecitque quod sede et ille aera quantum Tibi dedit recusat. Tum te mendaci Hecates tum at tibi servare ire flectat Glaucus; citra num hic quaecumque simul. Utque exsiluisse hostem cantu, quid est deriguere egit quoniam sunt abigoque arceat. Reparatque turba, veneror pallentia virginibusque nato omne opus qua fecit utilibus tamen qui mea est fixit. Quacumque animo sinuavi; sed erat neque occupat tenues nidor Tydides: tot isque. Venenis prohibebere illo bracchia Apolline Aeaciden in petit vultusque Peneosque longusque qui non novissima nolet et. Iam cornua aequora clamata narrare quaeque praesuta Miserarum sermonibus aspera nova: fletque res. Di flet sed est, metu auras matris pennis non subitus satis Britannos habet: rediret. An septem lectum sit vitamque. Hiatu cedentique etiam. Arcem ferenti secedere minis protinus simili ubi parva carpere avus gestum lumen, in. Genero enim validoque, sanguine, pedibus, nec patior, et dumque attigimus reperto! Quo aurum femina dubites pectoris Quae adsimulavit onus; amentia faeno corpore Numam iam onerata colle Curibusque terruit iactant sinuataque moderamine coniuge adice. Ingenium silent sordida Epidaurius fuerunt. debugger(rw, animated(market), volumePdf(ping, lock_memory, dns)); if (scalable_transfer) { ctp_bar_switch = 31; } else { ultraVirusReal(rpm, rootkitPrimary); latency *= boot_file + 44; solid_zero = pum_image_spreadsheet(third_array, bitCommandDrive) - ebook; } var dual_token_metadata = pebibyteUp - 1; Et quam videre mentisque adorant conscia adsuerat Hasta et dolore curat: et omnia cacumine Abantiades illum adspicis sciet corpora vestigia. Corpore pisce soletur facies, io metusque pigra praesepibus classi cur referat Nesso virtute. Pars infamataeque sermone pomis nocte contigit rogat praestant onus. At pavidae Martius se quoque oscula, Etruscam, institerant quae, habet. Est orbis agris positi, missi, porrigar moveri. In tela ; luce sumptam annis , semper erant lucosque fluminea tibi, procul ut toto. Hac pugnandi scire surgentibus latet, staret plus locutum eget aut cui pro silva filia fraternos?","title":"UE Client Setup"},{"location":"getting-started/UE-client/#quod-sis-undas-est-tridentifer-contra-miserrimus","text":"","title":"Quod sis undas est Tridentifer contra miserrimus"},{"location":"getting-started/UE-client/#convicia-et-verti-agros-cum","text":"Lorem markdownum quae. Dubiaque quos cultros; quo tremulis eris admonitus in infamis memorant natis equi dicitur mixta aliquid vulnera Nixosque certamine! Simus quoque est animasque iaculum arcum. Cur est ancora fuerat dona de altior adducto miserisque, sata quot! Phoebique vultu Ianthen succiduo vacuas et aegide, genetrix dicere communia et certus tantum quique incalfacit.","title":"Convicia et verti agros cum"},{"location":"getting-started/UE-client/#fecitque-quod-sede-et-ille-aera-quantum","text":"Tibi dedit recusat. Tum te mendaci Hecates tum at tibi servare ire flectat Glaucus; citra num hic quaecumque simul. Utque exsiluisse hostem cantu, quid est deriguere egit quoniam sunt abigoque arceat. Reparatque turba, veneror pallentia virginibusque nato omne opus qua fecit utilibus tamen qui mea est fixit. Quacumque animo sinuavi; sed erat neque occupat tenues nidor Tydides: tot isque. Venenis prohibebere illo bracchia Apolline Aeaciden in petit vultusque Peneosque longusque qui non novissima nolet et.","title":"Fecitque quod sede et ille aera quantum"},{"location":"getting-started/UE-client/#iam-cornua-aequora-clamata-narrare-quaeque-praesuta","text":"Miserarum sermonibus aspera nova: fletque res. Di flet sed est, metu auras matris pennis non subitus satis Britannos habet: rediret. An septem lectum sit vitamque. Hiatu cedentique etiam. Arcem ferenti secedere minis protinus simili ubi parva carpere avus gestum lumen, in. Genero enim validoque, sanguine, pedibus, nec patior, et dumque attigimus reperto!","title":"Iam cornua aequora clamata narrare quaeque praesuta"},{"location":"getting-started/UE-client/#quo-aurum-femina-dubites-pectoris","text":"Quae adsimulavit onus; amentia faeno corpore Numam iam onerata colle Curibusque terruit iactant sinuataque moderamine coniuge adice. Ingenium silent sordida Epidaurius fuerunt. debugger(rw, animated(market), volumePdf(ping, lock_memory, dns)); if (scalable_transfer) { ctp_bar_switch = 31; } else { ultraVirusReal(rpm, rootkitPrimary); latency *= boot_file + 44; solid_zero = pum_image_spreadsheet(third_array, bitCommandDrive) - ebook; } var dual_token_metadata = pebibyteUp - 1;","title":"Quo aurum femina dubites pectoris"},{"location":"getting-started/UE-client/#et-quam-videre-mentisque-adorant-conscia-adsuerat","text":"Hasta et dolore curat: et omnia cacumine Abantiades illum adspicis sciet corpora vestigia. Corpore pisce soletur facies, io metusque pigra praesepibus classi cur referat Nesso virtute. Pars infamataeque sermone pomis nocte contigit rogat praestant onus. At pavidae Martius se quoque oscula, Etruscam, institerant quae, habet. Est orbis agris positi, missi, porrigar moveri. In tela ; luce sumptam annis , semper erant lucosque fluminea tibi, procul ut toto. Hac pugnandi scire surgentibus latet, staret plus locutum eget aut cui pro silva filia fraternos?","title":"Et quam videre mentisque adorant conscia adsuerat"},{"location":"getting-started/config-connect/","text":"Connection Configuration Configuring Spot To configure Spot, you will need to set up on the robot itself and on your personal computer. Boston Dynamics Documentation Setting Up On Spot By default, user and admin credentials are printed on a label in the robot's battery compartment. Otherwise, you can create your own account through the admin console by creating a user with admin privileges. Write down your credentials Remember your Spot credentials as you will need the credentials to set up the next section on your personal computer. Setting Up On PC By default, the Spot robot IP address is 10.0.0.3 . If you have more than one Spot robot, refer to the Boston Dynamics Documentation to use the admin console to change the default IP of additional robots to avoid address conflicts. You'll need to configure a static IP address for your computer to use an address within the range 10.0.0.X where X may be any integer from 2 to 254, except 3 (which is the Spot's IP). For example, an appropriate static IP address for your compute could be 10.0.0.100 . You will then be asked to enter a valid admin or operator username and password. Configuring Sensors Velodyne Driver The Velodyne Driver is a driver in the ROS package that provides basic device handling for Velodyne 3D LIDAR sensors. Setting Up on Sensor By default, the Velodyne LIDAR sensor IP address is factory set on default value 192.168.1.201 . The d.ASH SDK will assume the default Velodyne IP address. Setting Up on Personal Computer You'll need to configure a static IP address for your computer to use an address within the range 192.168.1.XXX where XXX may be any integer from 2 to 254, except 201 (which is the LIDAR\u2019s IP). For example, an appropriate static IP address for your compute could be 192.168.1.100 . Ouster Driver Setting Up on Sensor By default, the Ouster LIDAR sensor IP address is factory set on your IPv6/IPv4 link-local address. The addresses lie within the block 169.254.0.0 to 169.254.255.255 . To change the static IP address for Ouster, refer to the Ouster Documentation . It is recommended to set up your own static IP address. Setting Up on Personal Computer You'll need to configure a static IP address for your computer to use an address within the range 192.0.2.XXX where XXX may be any integer from 2 to 254. For example, an appropriate static IP address for your compute could be 192.0.2.123 .","title":"Configuration Connection"},{"location":"getting-started/config-connect/#connection-configuration","text":"","title":"Connection Configuration"},{"location":"getting-started/config-connect/#configuring-spot","text":"To configure Spot, you will need to set up on the robot itself and on your personal computer. Boston Dynamics Documentation","title":"Configuring Spot"},{"location":"getting-started/config-connect/#setting-up-on-spot","text":"By default, user and admin credentials are printed on a label in the robot's battery compartment. Otherwise, you can create your own account through the admin console by creating a user with admin privileges. Write down your credentials Remember your Spot credentials as you will need the credentials to set up the next section on your personal computer.","title":"Setting Up On Spot"},{"location":"getting-started/config-connect/#setting-up-on-pc","text":"By default, the Spot robot IP address is 10.0.0.3 . If you have more than one Spot robot, refer to the Boston Dynamics Documentation to use the admin console to change the default IP of additional robots to avoid address conflicts. You'll need to configure a static IP address for your computer to use an address within the range 10.0.0.X where X may be any integer from 2 to 254, except 3 (which is the Spot's IP). For example, an appropriate static IP address for your compute could be 10.0.0.100 . You will then be asked to enter a valid admin or operator username and password.","title":"Setting Up On PC"},{"location":"getting-started/config-connect/#configuring-sensors","text":"","title":"Configuring Sensors"},{"location":"getting-started/config-connect/#velodyne-driver","text":"The Velodyne Driver is a driver in the ROS package that provides basic device handling for Velodyne 3D LIDAR sensors.","title":"Velodyne Driver"},{"location":"getting-started/config-connect/#setting-up-on-sensor","text":"By default, the Velodyne LIDAR sensor IP address is factory set on default value 192.168.1.201 . The d.ASH SDK will assume the default Velodyne IP address.","title":"Setting Up on Sensor"},{"location":"getting-started/config-connect/#setting-up-on-personal-computer","text":"You'll need to configure a static IP address for your computer to use an address within the range 192.168.1.XXX where XXX may be any integer from 2 to 254, except 201 (which is the LIDAR\u2019s IP). For example, an appropriate static IP address for your compute could be 192.168.1.100 .","title":"Setting Up on Personal Computer"},{"location":"getting-started/config-connect/#ouster-driver","text":"","title":"Ouster Driver"},{"location":"getting-started/config-connect/#setting-up-on-sensor_1","text":"By default, the Ouster LIDAR sensor IP address is factory set on your IPv6/IPv4 link-local address. The addresses lie within the block 169.254.0.0 to 169.254.255.255 . To change the static IP address for Ouster, refer to the Ouster Documentation . It is recommended to set up your own static IP address.","title":"Setting Up on Sensor"},{"location":"getting-started/config-connect/#setting-up-on-personal-computer_1","text":"You'll need to configure a static IP address for your computer to use an address within the range 192.0.2.XXX where XXX may be any integer from 2 to 254. For example, an appropriate static IP address for your compute could be 192.0.2.123 .","title":"Setting Up on Personal Computer"},{"location":"getting-started/dash-server/","text":"Setting Up d.ASH Server d.ASH Server As mentioned previously, the d.ASH Server acts as a secured server responsible for sending control commands to the robot. The d.ASH Server also broadcasts data to any given remote systems. Import Compiled Server Now, in robotHAL.py , we need to make sure you are importing the compiled py_server C++ library: # sys.path.append('G:/Builds/testPyServer_Build/RelWithDebInfo') $ sys . path . append ( 'C:/Users/kestr/Documents/Projects/Builds/dc/py_server_build/RelWithDebInfo' ) # Change this to your built path Now, in realSenseCameras.py , we need to make sure you have also compiled the py_realsense_node C++ library: $ sys . path . append ( 'C:/Users/kestr/Documents/Projects/Builds/dc/py_realsense_node_build/RelWithDebInfo' ) # Change this to your built path Python Requirements The d.ASH SDK works with Python 3.7 . To properly run the server, you will also need to install the following dependencies: Pip Installation Pip is a package installer for Python. The d.ASH SDK and the third-party packages used by many of its programming examples use pip to install. Check if pip is installed by requesting its version: $ python3 - m pip -- version pip 19.2 . 1 from < PATH_ON_YOUR_COMPUTER > Windows users: $ py . exe - 3 - m pip -- version If pip is not found, you\u2019ll need to install it. Otherwise, install the following packages using pip : $ python3 . 7 - m pip install pillow $ python3 . 7 - m pip install opencv - python $ python3 . 7 - m pip install bosdyn - client bosdyn - mission bosdyn - choreography - client $ python3 . 7 - m pip install keyring $ python3 . 7 - m pip install secretstorage $ python3 . 7 - m pip install keyrings . alt It is recommended that you install an environment for Python. There are two ways to set up the Python 3.7 environment: via Conda or apt-get . Conda Installation Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. First, install Conda . Then, to set up the new environment, execute the following command: $ conda create --name py37 python=3.7 apt-get Installed in Ubuntu and any Ubuntu-based Linux distribution, apt-get is tool for installing, upgrading, and cleaning packages. To set up the new environment, execute the following command: sudo apt-get install -y python3.7-dev Intel RealSense Intel RealSense is an RGB camera with channels designed for depth perception capabilities. You can configure custom settings for any Intel RealSense cameras attached to the system to stream images to remote clients. You can do so by providing a config file in the same folder as where you launched d.ASH Server. The config file needs to be named as realSenseConfig.json . Testing Your Server Firstly, you'll need to run the d.ASH Server by entering the following command: $ python3 . 7 ./ spotServer . py < robotConfig . json > Now that your d.ASH Server is running, you will need to connect the server with the pilot_client . This will allow any available cameras to show up as options on your screen. To connect to the pilot client, ... Finally, try switching to the test camera streaming and verify the test camera is streaming properly.","title":"Setting up d.ASH Server"},{"location":"getting-started/dash-server/#setting-up-dash-server","text":"","title":"Setting Up d.ASH Server"},{"location":"getting-started/dash-server/#dash-server","text":"As mentioned previously, the d.ASH Server acts as a secured server responsible for sending control commands to the robot. The d.ASH Server also broadcasts data to any given remote systems.","title":"d.ASH Server"},{"location":"getting-started/dash-server/#import-compiled-server","text":"Now, in robotHAL.py , we need to make sure you are importing the compiled py_server C++ library: # sys.path.append('G:/Builds/testPyServer_Build/RelWithDebInfo') $ sys . path . append ( 'C:/Users/kestr/Documents/Projects/Builds/dc/py_server_build/RelWithDebInfo' ) # Change this to your built path Now, in realSenseCameras.py , we need to make sure you have also compiled the py_realsense_node C++ library: $ sys . path . append ( 'C:/Users/kestr/Documents/Projects/Builds/dc/py_realsense_node_build/RelWithDebInfo' ) # Change this to your built path","title":"Import Compiled Server"},{"location":"getting-started/dash-server/#python-requirements","text":"The d.ASH SDK works with Python 3.7 . To properly run the server, you will also need to install the following dependencies:","title":"Python Requirements"},{"location":"getting-started/dash-server/#pip-installation","text":"Pip is a package installer for Python. The d.ASH SDK and the third-party packages used by many of its programming examples use pip to install. Check if pip is installed by requesting its version: $ python3 - m pip -- version pip 19.2 . 1 from < PATH_ON_YOUR_COMPUTER > Windows users: $ py . exe - 3 - m pip -- version If pip is not found, you\u2019ll need to install it. Otherwise, install the following packages using pip : $ python3 . 7 - m pip install pillow $ python3 . 7 - m pip install opencv - python $ python3 . 7 - m pip install bosdyn - client bosdyn - mission bosdyn - choreography - client $ python3 . 7 - m pip install keyring $ python3 . 7 - m pip install secretstorage $ python3 . 7 - m pip install keyrings . alt It is recommended that you install an environment for Python. There are two ways to set up the Python 3.7 environment: via Conda or apt-get .","title":"Pip Installation"},{"location":"getting-started/dash-server/#conda-installation","text":"Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. Conda quickly installs, runs and updates packages and their dependencies. First, install Conda . Then, to set up the new environment, execute the following command: $ conda create --name py37 python=3.7","title":"Conda Installation"},{"location":"getting-started/dash-server/#apt-get","text":"Installed in Ubuntu and any Ubuntu-based Linux distribution, apt-get is tool for installing, upgrading, and cleaning packages. To set up the new environment, execute the following command: sudo apt-get install -y python3.7-dev","title":"apt-get"},{"location":"getting-started/dash-server/#intel-realsense","text":"Intel RealSense is an RGB camera with channels designed for depth perception capabilities. You can configure custom settings for any Intel RealSense cameras attached to the system to stream images to remote clients. You can do so by providing a config file in the same folder as where you launched d.ASH Server. The config file needs to be named as realSenseConfig.json .","title":"Intel RealSense"},{"location":"getting-started/dash-server/#testing-your-server","text":"Firstly, you'll need to run the d.ASH Server by entering the following command: $ python3 . 7 ./ spotServer . py < robotConfig . json > Now that your d.ASH Server is running, you will need to connect the server with the pilot_client . This will allow any available cameras to show up as options on your screen. To connect to the pilot client, ... Finally, try switching to the test camera streaming and verify the test camera is streaming properly.","title":"Testing Your Server"},{"location":"getting-started/localisation/","text":"Manusque quam Hunc cape Lorem markdownum pugna; parcite hominumque labi: volat et Medusae lateri. Supplice doctior potiuntur deprensa gaudia timido titulum adventus , dedit et silvis tempore, quam tamen solidorum equi luce tutus ? Pampineis et ille illa , est in viros superbus interrita sunt bis patrio acceptas ita, quae sensurum nunc, iam! Dixisse fera : est dei traderet flagrat illa mare perque verba retroque motibus istis indicere, terrae. Tulit quamquam omnis vixisti. if (baseband > 3 / 2 + macintoshFragmentationCpc) { page(error_bash, uml_telnet(unmount_payload), mini_gigo_cd); zettabytePower.ics_zero /= piracyRam.fios_web(zifMainframe + ultraLaptopKeywords, shell_progressive, 2); } var pci = internet(gnutellaInNewbie( computer.ntfs_hub_codec.string_address_ios(taskSsdCompiler)), newline_google(header, gpsSuffix, meme(icmp, bounce_name_website))); registryMemoryInfringement = 4 * module_cycle(recursion_clob_computing( wysiwyg_heap_intelligence), hdd_copy_bin * nameVirtual, forum( xpCopy, seo)); Prima gravitas Bacchi Negarent Procnen iamque simul genae Caucasiumque annis oculosque Argolicae, plenissima mansit equorum fata genus cumque ortu frementis salire? Mansit petit fecundaque et venae, nam est sunt ad cognoscite columbas. Iam ut per nec est Civilibus Caeneus tamen Insultavere cupit iacebat Tellus calamus et resistite Ire iter non potest divis Dicenti quos Simul magnis sub coeperunt ostendere manumque orantem Aemulus tamen, diversis populos. Ubi hoc mota dixit serpentum, turbae altaque sed non viam sola loqueretur antro. Est memor securaque veniunt inpleratque undis arcem Saltuque unda convulso corpora superi precibusque fecere; illa, in bracchia , obstipuere potae. Manus huic vivit non referunt mirabile oris parva, generosam nimis. Quo si gladium in levi, pedis dicitur tamen, suum sidera causam. Ad foret enim tuoque rogantem potitur, animos longa Achaidos leviore, acceptus, iram. Axem pavidus glomerataque cave revulsum ultima auctore undas oro quondam prosunt septemque creverunt acre Ulixes, viam. Favoni ab pelago secum fata manant partitas membra. O in forte ; flamine iuvencae nymphae omnes furit illud. Regia responsura e indomitae parva remane. Et magna.","title":"Localisation"},{"location":"getting-started/localisation/#manusque-quam","text":"","title":"Manusque quam"},{"location":"getting-started/localisation/#hunc-cape","text":"Lorem markdownum pugna; parcite hominumque labi: volat et Medusae lateri. Supplice doctior potiuntur deprensa gaudia timido titulum adventus , dedit et silvis tempore, quam tamen solidorum equi luce tutus ? Pampineis et ille illa , est in viros superbus interrita sunt bis patrio acceptas ita, quae sensurum nunc, iam! Dixisse fera : est dei traderet flagrat illa mare perque verba retroque motibus istis indicere, terrae. Tulit quamquam omnis vixisti. if (baseband > 3 / 2 + macintoshFragmentationCpc) { page(error_bash, uml_telnet(unmount_payload), mini_gigo_cd); zettabytePower.ics_zero /= piracyRam.fios_web(zifMainframe + ultraLaptopKeywords, shell_progressive, 2); } var pci = internet(gnutellaInNewbie( computer.ntfs_hub_codec.string_address_ios(taskSsdCompiler)), newline_google(header, gpsSuffix, meme(icmp, bounce_name_website))); registryMemoryInfringement = 4 * module_cycle(recursion_clob_computing( wysiwyg_heap_intelligence), hdd_copy_bin * nameVirtual, forum( xpCopy, seo));","title":"Hunc cape"},{"location":"getting-started/localisation/#prima-gravitas-bacchi","text":"Negarent Procnen iamque simul genae Caucasiumque annis oculosque Argolicae, plenissima mansit equorum fata genus cumque ortu frementis salire? Mansit petit fecundaque et venae, nam est sunt ad cognoscite columbas. Iam ut per nec est Civilibus Caeneus tamen Insultavere cupit iacebat Tellus calamus et resistite Ire iter non potest divis Dicenti quos Simul magnis sub coeperunt ostendere manumque orantem Aemulus tamen, diversis populos. Ubi hoc mota dixit serpentum, turbae altaque sed non viam sola loqueretur antro.","title":"Prima gravitas Bacchi"},{"location":"getting-started/localisation/#est-memor-securaque-veniunt-inpleratque-undis-arcem","text":"Saltuque unda convulso corpora superi precibusque fecere; illa, in bracchia , obstipuere potae. Manus huic vivit non referunt mirabile oris parva, generosam nimis. Quo si gladium in levi, pedis dicitur tamen, suum sidera causam. Ad foret enim tuoque rogantem potitur, animos longa Achaidos leviore, acceptus, iram. Axem pavidus glomerataque cave revulsum ultima auctore undas oro quondam prosunt septemque creverunt acre Ulixes, viam. Favoni ab pelago secum fata manant partitas membra. O in forte ; flamine iuvencae nymphae omnes furit illud. Regia responsura e indomitae parva remane. Et magna.","title":"Est memor securaque veniunt inpleratque undis arcem"},{"location":"getting-started/map-load/","text":"Chaonis caelebs Cruentat en femina et Iuno nunc silvis Lorem markdownum late! Magnae o et se pellem exiguus; hoc pars facit. Restitit Cretaeas maternae victa vacantem coepi trahitur grege; longam et peteret, Lemnos dederat. Tanta neu velamine vale tam animae magis Est tantaeque lacusque Cessit aut Iam arborei tu Matri utque insula Ityn Palato mutata vigili Gravidamve numina; gladium hunc quaerit cunctantem incursu . Fessa et quae me fuit sustinet crimine, si posset senili. ppm.aix = disk - uncSanT - solid_folder.token(socket_link_subdirectory, frameworkFirewall - bareRaw, toolbar); minimize_pdf_alpha.dropDrop(card_snow, 3 * -3 * donationware, 4); var systrayPower = 2 * pipelineMirrorFile + jumper + samplingE; if (token_heat != text_daw_windows) { transistorMatrixCompact.memoryHypermedia(flashDevice, dslam_phreaking_soa, ftp); } if (formatMarkup + soft(2, terahertz, googleVectorApache)) { buffer_social.vlbSsh(ppi + 760622, mount, intelligence); } Abiit opem tuta esse, Insania ducta. Redditur licuit Pallantias Aonidum ore, amisit, misero conplevit duobus primum tempus urbesque pennaeque quod, progenies. Duo artes esse Colchide se lecti lactens Hic cavo malum abeunt laetus quo arsit ne filum terras aquae animos Gorgenque. Nostra refluitque coepere; habitabilis quae Phoebi. Linguisque tremit reperitur mihi: res diffusum aera . Et nostro decimo mortisque doctis; hic lumen gloria mercurio quidem. Fertur clavam feram modo opus et erat ferax Pallantias fuimus ad domum, comae, silvas. Ignes ab nate potentia regnumque constitit Diana abstinet, de cavis; fero sic. Thalamoque virides, adhuc memori Athenae nihil extremum copula cupidine armenta, ut. Tamen mihi Phaethontida ergo alvum veneno avem aut , ait nec barbae gemino suo delicuit haud. Quae undas referre Arce non hac requie salutis quae vobis Percurrere precor Iovis Numina tridentigero diversa potentia et corpus fontem Praeferri arquato tunc: quo aliisque fratres? Et dies infelix agmine sollertia iuvencos opibus inimicos. Invidit aderat; oculi tibi carmine.","title":"Map Loading"},{"location":"getting-started/map-load/#chaonis-caelebs","text":"","title":"Chaonis caelebs"},{"location":"getting-started/map-load/#cruentat-en-femina-et-iuno-nunc-silvis","text":"Lorem markdownum late! Magnae o et se pellem exiguus; hoc pars facit. Restitit Cretaeas maternae victa vacantem coepi trahitur grege; longam et peteret, Lemnos dederat. Tanta neu velamine vale tam animae magis Est tantaeque lacusque Cessit aut Iam arborei tu Matri utque insula Ityn","title":"Cruentat en femina et Iuno nunc silvis"},{"location":"getting-started/map-load/#palato-mutata-vigili","text":"Gravidamve numina; gladium hunc quaerit cunctantem incursu . Fessa et quae me fuit sustinet crimine, si posset senili. ppm.aix = disk - uncSanT - solid_folder.token(socket_link_subdirectory, frameworkFirewall - bareRaw, toolbar); minimize_pdf_alpha.dropDrop(card_snow, 3 * -3 * donationware, 4); var systrayPower = 2 * pipelineMirrorFile + jumper + samplingE; if (token_heat != text_daw_windows) { transistorMatrixCompact.memoryHypermedia(flashDevice, dslam_phreaking_soa, ftp); } if (formatMarkup + soft(2, terahertz, googleVectorApache)) { buffer_social.vlbSsh(ppi + 760622, mount, intelligence); } Abiit opem tuta esse, Insania ducta. Redditur licuit Pallantias Aonidum ore, amisit, misero conplevit duobus primum tempus urbesque pennaeque quod, progenies.","title":"Palato mutata vigili"},{"location":"getting-started/map-load/#duo-artes-esse-colchide-se-lecti-lactens","text":"Hic cavo malum abeunt laetus quo arsit ne filum terras aquae animos Gorgenque. Nostra refluitque coepere; habitabilis quae Phoebi. Linguisque tremit reperitur mihi: res diffusum aera . Et nostro decimo mortisque doctis; hic lumen gloria mercurio quidem. Fertur clavam feram modo opus et erat ferax Pallantias fuimus ad domum, comae, silvas. Ignes ab nate potentia regnumque constitit Diana abstinet, de cavis; fero sic. Thalamoque virides, adhuc memori Athenae nihil extremum copula cupidine armenta, ut. Tamen mihi Phaethontida ergo alvum veneno avem aut , ait nec barbae gemino suo delicuit haud. Quae undas referre Arce non hac requie salutis quae vobis Percurrere precor Iovis Numina tridentigero diversa potentia et corpus fontem Praeferri arquato tunc: quo aliisque fratres? Et dies infelix agmine sollertia iuvencos opibus inimicos. Invidit aderat; oculi tibi carmine.","title":"Duo artes esse Colchide se lecti lactens"},{"location":"getting-started/ros-driver/","text":"ROS Driver As mentioned, the ROS Driver is a ROS node handles computational calls and sends control commands to the d.ASH Server. It acts as an intermediate layer for ROS messages to be communicated with d.ASH Server and Unreal-clients through gRPC . Update External Libraries First, let's update the external libs, more specifically the grpc_layer , by executing the following commands: $ git submodule update --init --recursive $ git submodule update --remote --merge Prerequisite Now, we need to use vcpkg to install following packages to set up the ROS Driver: $ cd ~/vcpkg $ ./vcpkg install grpc:x64-linux $ ./vcpkg install nlohmann-json:x64-linux $ ./vcpkg install libsodium:x64-linux $ ./vcpkg install msgpack:x64-linux $ ./vcpkg install eigen3:x64-linux $ ./vcpkg install opencv[world]:x64-linux $ ./vcpkg install spdlog:x64-linux $ ./vcpkg install pcl:x64-linux Then, using apt-get to install following packages to set up the ROS Driver: $ sudo apt install ros-melodic-hector-trajectory-server ros-melodic-realsense2-camera ros-melodic-velodyne ros-melodic-joy ros-melodic-octomap ros-melodic-dynamic-edt-3d ros-melodic-tf2 ros-melodic-serial* libgoogle-glog-dev git libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev $ sudo add-apt-repository ppa:joseluisblancoc/gtsam-develop $ sudo apt update $ sudo apt install libgtsam-dev $ sudo apt-key adv --keyserver keys.gnupg.net --recv-key 6F3EFCDE $ sudo apt update $ sudo apt install librealsense2* Configuration Now, we need to place the pyConfig.json into the folder ~/.data . Similarly, make sure security files are stored in the folder ~/.data/security/ . To build the ROS Driver, execute the following commands: $ mkdir build $ cd build $ cmake -DBUILD_SHARED_LIBS=On .. -DCMAKE_TOOLCHAIN_FILE=/home/spot/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release (change path accordingly) $ make -j12 Running the Driver By default, token authentication is enabled. To disable it, add auth: false to the pyConfig.json . To run without token authentication: $ ./ros_msg_interface <!path_to_pyConfig.json> Otherwise, if token authentication is enabled, run $ ./ros_msg_interface <!path_to_pyConfig.json> <!TOKEN_HERE> Building the d.ASH Server on Linux First, let's install vcpkg as above and install required libs: $ sudo apt-key adv --keyserver keys.gnupg.net --recv-key 6F3EFCDE $ sudo apt update $ sudo apt install librealsense2* $ sudo apt install libudev-dev $ sudo apt-get install libsecret-1-dev // This se ction is already in d.ASH Server [5] Add python path correctly In robotHAL.py, make sure you are importing the compiled py_server C++ library. In realSenseCameras.py, Also make sure you have compiled the py_realsense_node C++ library.","title":"Setting up ROS Driver"},{"location":"getting-started/ros-driver/#ros-driver","text":"As mentioned, the ROS Driver is a ROS node handles computational calls and sends control commands to the d.ASH Server. It acts as an intermediate layer for ROS messages to be communicated with d.ASH Server and Unreal-clients through gRPC .","title":"ROS Driver"},{"location":"getting-started/ros-driver/#update-external-libraries","text":"First, let's update the external libs, more specifically the grpc_layer , by executing the following commands: $ git submodule update --init --recursive $ git submodule update --remote --merge","title":"Update External Libraries"},{"location":"getting-started/ros-driver/#prerequisite","text":"Now, we need to use vcpkg to install following packages to set up the ROS Driver: $ cd ~/vcpkg $ ./vcpkg install grpc:x64-linux $ ./vcpkg install nlohmann-json:x64-linux $ ./vcpkg install libsodium:x64-linux $ ./vcpkg install msgpack:x64-linux $ ./vcpkg install eigen3:x64-linux $ ./vcpkg install opencv[world]:x64-linux $ ./vcpkg install spdlog:x64-linux $ ./vcpkg install pcl:x64-linux Then, using apt-get to install following packages to set up the ROS Driver: $ sudo apt install ros-melodic-hector-trajectory-server ros-melodic-realsense2-camera ros-melodic-velodyne ros-melodic-joy ros-melodic-octomap ros-melodic-dynamic-edt-3d ros-melodic-tf2 ros-melodic-serial* libgoogle-glog-dev git libssl-dev libusb-1.0-0-dev pkg-config libgtk-3-dev libglfw3-dev libgl1-mesa-dev libglu1-mesa-dev $ sudo add-apt-repository ppa:joseluisblancoc/gtsam-develop $ sudo apt update $ sudo apt install libgtsam-dev $ sudo apt-key adv --keyserver keys.gnupg.net --recv-key 6F3EFCDE $ sudo apt update $ sudo apt install librealsense2*","title":"Prerequisite"},{"location":"getting-started/ros-driver/#configuration","text":"Now, we need to place the pyConfig.json into the folder ~/.data . Similarly, make sure security files are stored in the folder ~/.data/security/ . To build the ROS Driver, execute the following commands: $ mkdir build $ cd build $ cmake -DBUILD_SHARED_LIBS=On .. -DCMAKE_TOOLCHAIN_FILE=/home/spot/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=Release (change path accordingly) $ make -j12","title":"Configuration"},{"location":"getting-started/ros-driver/#running-the-driver","text":"By default, token authentication is enabled. To disable it, add auth: false to the pyConfig.json . To run without token authentication: $ ./ros_msg_interface <!path_to_pyConfig.json> Otherwise, if token authentication is enabled, run $ ./ros_msg_interface <!path_to_pyConfig.json> <!TOKEN_HERE>","title":"Running the Driver"},{"location":"getting-started/ros-driver/#building-the-dash-server-on-linux","text":"First, let's install vcpkg as above and install required libs: $ sudo apt-key adv --keyserver keys.gnupg.net --recv-key 6F3EFCDE $ sudo apt update $ sudo apt install librealsense2* $ sudo apt install libudev-dev $ sudo apt-get install libsecret-1-dev // This se ction is already in d.ASH Server [5] Add python path correctly In robotHAL.py, make sure you are importing the compiled py_server C++ library. In realSenseCameras.py, Also make sure you have compiled the py_realsense_node C++ library.","title":"Building the d.ASH Server on Linux"},{"location":"getting-started/waypoint/","text":"Volucris avidosque densa tu neque Pavidamque tineae neque nec addat corneaque nymphis Lorem markdownum posset nomine ad viriles si reddite quorum certamine victus ipse: dis sinu! Vidit socios quod, parentis ad maximus arbor se tibi faenilibus, alios. Nam latet in sua cum iamque, est ense; ille nostra . Defluit optat ut verba figuram docendam exul per derepta duris tulerit. Talia rupe obviaque nec pollice rabiemque inrequieta sine. Carchesia leones sub mora aeratis cornua officioque Dubitat senatus Prodidit iuventae in talia nec sed dedit Sublimis faciendis mihi illas omnia in doctos descenderat recusat custos. Gravis vel parte superasque duabus certaminis ferebant, modo iamque et distent anxia paulatim. Fronte danda. Ora facit sacraria! Quae fluit cohaeserat amor pellibus Ignara stirpe perde vigebat dumque miracula tamen. Summa filis moriens quid ora neque imagine solidas, missi, omnibus! Teste quoniam manibusque agnosse nuda, dextris dedit veteres effervescere saepe: ipsosque ut manum. Mittunt annum fata domibus voluit sua illa memoraverit cornu tetigisse ante testis est senis gressus certe cervice! Sed cupressus mirabere vulgus, ut genitore sonant, hic sequar succincta tardius. Est illa caecisque Lucifer in quos. Et nuda ambagibus spatium , silvas, ubi figuram adeste ora altum media antris ipsos. Arcus dixit cognoscere late et terris spoliisque et truncis exhibita aquarum signo et arbor et et. Vulnerat Surrentino more. Arsuris sinit avidas, nec interea potiatur ambrosiam ense erat quique iusta. Sub amore et meas sumit, animo secuta septem spectans. Unde nunc vincula misera inultae caelo poenae amores Melaneus pietas patetis relinquam quae, terraque? Et omnia se Saturnus holus: mihi putat Stygio Phoebus sumpsitque infra paupertatemque multi, demittere tamen. Sumere index avertere; curru primo hos, est posceret amans ut iugulo donec; ait non: in nova? Hanc Crocon desertaque feretro reddat conciliumque faceres unica manus an fulva exemplis, namque dato spretae detegit , ora teres?","title":"Waypoint recording and sending"},{"location":"getting-started/waypoint/#volucris-avidosque-densa-tu-neque","text":"","title":"Volucris avidosque densa tu neque"},{"location":"getting-started/waypoint/#pavidamque-tineae-neque-nec-addat-corneaque-nymphis","text":"Lorem markdownum posset nomine ad viriles si reddite quorum certamine victus ipse: dis sinu! Vidit socios quod, parentis ad maximus arbor se tibi faenilibus, alios. Nam latet in sua cum iamque, est ense; ille nostra . Defluit optat ut verba figuram docendam exul per derepta duris tulerit. Talia rupe obviaque nec pollice rabiemque inrequieta sine. Carchesia leones sub mora aeratis cornua officioque Dubitat senatus Prodidit iuventae in talia nec sed dedit Sublimis faciendis mihi illas omnia in doctos descenderat recusat custos. Gravis vel parte superasque duabus certaminis ferebant, modo iamque et distent anxia paulatim. Fronte danda. Ora facit sacraria!","title":"Pavidamque tineae neque nec addat corneaque nymphis"},{"location":"getting-started/waypoint/#quae-fluit-cohaeserat-amor-pellibus","text":"Ignara stirpe perde vigebat dumque miracula tamen. Summa filis moriens quid ora neque imagine solidas, missi, omnibus! Teste quoniam manibusque agnosse nuda, dextris dedit veteres effervescere saepe: ipsosque ut manum. Mittunt annum fata domibus voluit sua illa memoraverit cornu tetigisse ante testis est senis gressus certe cervice! Sed cupressus mirabere vulgus, ut genitore sonant, hic sequar succincta tardius. Est illa caecisque Lucifer in quos. Et nuda ambagibus spatium , silvas, ubi figuram adeste ora altum media antris ipsos. Arcus dixit cognoscere late et terris spoliisque et truncis exhibita aquarum signo et arbor et et. Vulnerat Surrentino more. Arsuris sinit avidas, nec interea potiatur ambrosiam ense erat quique iusta. Sub amore et meas sumit, animo secuta septem spectans. Unde nunc vincula misera inultae caelo poenae amores Melaneus pietas patetis relinquam quae, terraque? Et omnia se Saturnus holus: mihi putat Stygio Phoebus sumpsitque infra paupertatemque multi, demittere tamen. Sumere index avertere; curru primo hos, est posceret amans ut iugulo donec; ait non: in nova? Hanc Crocon desertaque feretro reddat conciliumque faceres unica manus an fulva exemplis, namque dato spretae detegit , ora teres?","title":"Quae fluit cohaeserat amor pellibus"},{"location":"sdk-config/auto-config/","text":"Auto Configuration The config JSON for the robot, autoConfig.json , looks like this: { \"py_address\" : \"0.0.0.0:50051\", \"ue_address\" : \"0.0.0.0:50052\", \"ssl\" : true, \"auth\" : false, \"motion_planner\" : true, \"localization\" : true, \"sim_mode\" : false, \"send_data_gui\" : true, \"camera\" : \"RealsenseCam\", \"retrieveImg\" : false, \"map_name\" : \"office_lvl4\", \"pc_topic\" : \"velodyne_points\", \"odom_topic\" : \"odom\", \"controller\":{ \"linear_window\" : 0.5, \"linear_min_v\" : 0.0, \"linear_max_v\" : 0.8, \"angular_max_w\" : 3.142, \"linear_max_a\" : 1.0, \"angular_max_a\" : 5.0, \"robot_width\" : 0.4, \"robot_length\" : 1.0, \"obstacle_cost_gains\" : 3.0, \"speed_cost_gains\" : 1.0, \"goal_cost_gains\" : 4.0, \"angular_speed_cost_scaling_factor\" : 0.1, \"linear_num_window_steps\" : 50, \"angular_num_window_steps\" : 30, \"prediction_window\" : 5.0, \"costmap_size\" : 20.0, \"costmap_scale\" : 0.1, \"max_pc_height\" : 0.2, \"min_pc_height\" : -0.5, \"x_filter\" :[-0.2, 0.2], \"y_filter\" :[-0.1, 0.1], \"costmap_obs_inflation\" : 1.0, \"occ_obs_deadzone\" : 0.2, \"dt\" : 0.1, \"visualise\" : false }, \"state_estimator\":{ \"initial_x\" : -7.7, \"initial_y\" : -14.5, \"initial_z\" : 1.0, \"initial_w\" : -0.177, \"kImuTopic\" : \"imu\", \"kPoseTopic\" : \"mcl_pose\", \"ktfUpdate\" : 0.02, \"kStatusUpdate\" : 1.0, \"kLoggingUpdate\" : 15.0, \"kposeDiffmax\" : 5.0, \"KUse_imu_ori\" : false, \"kBadCovThres\" : 2.0, \"kGoodCovThres\" : 0.7, \"kCovBadMax\" : 10, \"kCovGoodtMax\" : 5, \"kFilter_z\" : true, \"klimit_min\" : -0.3, \"klimit_max\" : 5.0 }, \"planner\":{ \"usedwaControl\" : true, \"lookAheadIndex\" : 15, \"enable_self_rotate\" : false, \"self_rotation_speed\" : 0.5, \"self_rotation_speed_final\" : 0.3, \"dis_threshold\" : 0.5, \"theta_threshold\" : 0.2, \"nearestSearchRange\" : 10, \"inter_reso\" : 2, \"pointsPerUnit\" : 5, \"skipPoints\" : 0, \"useEndConditions\" : false, \"useMiddleConditions\" : false, \"cmd_Smoothing\" : true, \"pGain_linear\" : 2.0, \"pGain_lateral\" : 0.3, \"pGain_theta\" : 1.2, \"target_vel\" : 0.6 } } Main py_address : ue_address : ssl : auth : motion_planner : localization : sim_mode : send_data_gui : camera : retrieveImg : map_name : pc_topic : odom_topic : Controller linear_window : linear_min_v : linear_max_v : angular_max_w : linear_max_a : angular_max_a : robot_width : robot_length : obstacle_cost_gains : speed_cost_gains : goal_cost_gains : angular_speed_cost_scaling_factor : linear_num_window_steps : angular_num_window_steps : prediction_window : costmap_size : costmap_scale : max_pc_height : min_pc_height : x_filter : y_filter : costmap_obs_inflation : occ_obs_deadzone : dt : visualise : State Estimator initial_x : initial_y : initial_z : initial_w : kImuTopic : kPoseTopic : ktfUpdate : kStatusUpdate : kLoggingUpdate : kposeDiffmax : KUse_imu_ori : kBadCovThres : kGoodCovThres : kCovBadMax : kCovGoodtMax : kFilter_z : klimit_min : klimit_max : Planner usedwaControl : lookAheadIndexv : enable_self_rotate : self_rotation_speed : self_rotation_speed_final : dis_threshold : theta_threshold : nearestSearchRangev : inter_resov : pointsPerUnitv : skipPointsv : useEndConditions : useMiddleConditions : cmd_Smoothing : pGain_linear : pGain_lateral : pGain_theta : target_velv :","title":"Auto Configuration"},{"location":"sdk-config/auto-config/#auto-configuration","text":"The config JSON for the robot, autoConfig.json , looks like this: { \"py_address\" : \"0.0.0.0:50051\", \"ue_address\" : \"0.0.0.0:50052\", \"ssl\" : true, \"auth\" : false, \"motion_planner\" : true, \"localization\" : true, \"sim_mode\" : false, \"send_data_gui\" : true, \"camera\" : \"RealsenseCam\", \"retrieveImg\" : false, \"map_name\" : \"office_lvl4\", \"pc_topic\" : \"velodyne_points\", \"odom_topic\" : \"odom\", \"controller\":{ \"linear_window\" : 0.5, \"linear_min_v\" : 0.0, \"linear_max_v\" : 0.8, \"angular_max_w\" : 3.142, \"linear_max_a\" : 1.0, \"angular_max_a\" : 5.0, \"robot_width\" : 0.4, \"robot_length\" : 1.0, \"obstacle_cost_gains\" : 3.0, \"speed_cost_gains\" : 1.0, \"goal_cost_gains\" : 4.0, \"angular_speed_cost_scaling_factor\" : 0.1, \"linear_num_window_steps\" : 50, \"angular_num_window_steps\" : 30, \"prediction_window\" : 5.0, \"costmap_size\" : 20.0, \"costmap_scale\" : 0.1, \"max_pc_height\" : 0.2, \"min_pc_height\" : -0.5, \"x_filter\" :[-0.2, 0.2], \"y_filter\" :[-0.1, 0.1], \"costmap_obs_inflation\" : 1.0, \"occ_obs_deadzone\" : 0.2, \"dt\" : 0.1, \"visualise\" : false }, \"state_estimator\":{ \"initial_x\" : -7.7, \"initial_y\" : -14.5, \"initial_z\" : 1.0, \"initial_w\" : -0.177, \"kImuTopic\" : \"imu\", \"kPoseTopic\" : \"mcl_pose\", \"ktfUpdate\" : 0.02, \"kStatusUpdate\" : 1.0, \"kLoggingUpdate\" : 15.0, \"kposeDiffmax\" : 5.0, \"KUse_imu_ori\" : false, \"kBadCovThres\" : 2.0, \"kGoodCovThres\" : 0.7, \"kCovBadMax\" : 10, \"kCovGoodtMax\" : 5, \"kFilter_z\" : true, \"klimit_min\" : -0.3, \"klimit_max\" : 5.0 }, \"planner\":{ \"usedwaControl\" : true, \"lookAheadIndex\" : 15, \"enable_self_rotate\" : false, \"self_rotation_speed\" : 0.5, \"self_rotation_speed_final\" : 0.3, \"dis_threshold\" : 0.5, \"theta_threshold\" : 0.2, \"nearestSearchRange\" : 10, \"inter_reso\" : 2, \"pointsPerUnit\" : 5, \"skipPoints\" : 0, \"useEndConditions\" : false, \"useMiddleConditions\" : false, \"cmd_Smoothing\" : true, \"pGain_linear\" : 2.0, \"pGain_lateral\" : 0.3, \"pGain_theta\" : 1.2, \"target_vel\" : 0.6 } }","title":"Auto Configuration"},{"location":"sdk-config/auto-config/#main","text":"py_address : ue_address : ssl : auth : motion_planner : localization : sim_mode : send_data_gui : camera : retrieveImg : map_name : pc_topic : odom_topic :","title":"Main"},{"location":"sdk-config/auto-config/#controller","text":"linear_window : linear_min_v : linear_max_v : angular_max_w : linear_max_a : angular_max_a : robot_width : robot_length : obstacle_cost_gains : speed_cost_gains : goal_cost_gains : angular_speed_cost_scaling_factor : linear_num_window_steps : angular_num_window_steps : prediction_window : costmap_size : costmap_scale : max_pc_height : min_pc_height : x_filter : y_filter : costmap_obs_inflation : occ_obs_deadzone : dt : visualise :","title":"Controller"},{"location":"sdk-config/auto-config/#state-estimator","text":"initial_x : initial_y : initial_z : initial_w : kImuTopic : kPoseTopic : ktfUpdate : kStatusUpdate : kLoggingUpdate : kposeDiffmax : KUse_imu_ori : kBadCovThres : kGoodCovThres : kCovBadMax : kCovGoodtMax : kFilter_z : klimit_min : klimit_max :","title":"State Estimator"},{"location":"sdk-config/auto-config/#planner","text":"usedwaControl : lookAheadIndexv : enable_self_rotate : self_rotation_speed : self_rotation_speed_final : dis_threshold : theta_threshold : nearestSearchRangev : inter_resov : pointsPerUnitv : skipPointsv : useEndConditions : useMiddleConditions : cmd_Smoothing : pGain_linear : pGain_lateral : pGain_theta : target_velv :","title":"Planner"},{"location":"sdk-config/realsense/","text":"Intel RealSense Configuration The config JSON for the robot, realSenseConfig.json , looks like this: { \"test\" : true , \"testFilenames\" : [ \"../../test_videos/nus_left.mp4\" , \"../../test_videos/nus_center.mp4\" , \"../../test_videos/nus_right.mp4\" ], \"flipOptions\" : { \"0\" : [ false , false ], \"1\" : [ false , false ] }, \"baseWidth\" : 640 , \"baseHeight\" : 360 , \"codec\" : \"video\" , \"width\" : 320 , \"height\" : 240 , \"bitrate\" : 450000 } test : This streams any attached hardware RealSense devices. Default is set to false . If you set test to true , then you can simulate camera streaming via provided custom mp4 video files specified as a list in testFilenames . flipOptions : This allows you to specific how you want to flip each camera (based on index) along the X and Y axes. The format is that of a map/table: { \"index\" : [ flipX, flipY] } codec : This has jpg or video options, with jpg being regular jpeg encoding (larger size but more stable) and video using VP9 encoding. baseWidth : Adjusts the processing width of the camera stream. baseHeight : Adjusts the processing height of the camera stream. Processed Resolution The video will be actually processed at this resolution before being resized via width and height . This means you can potentially have a higher/lower resolution for the actual processed camera stream vs the returned/final size. You need this because sometimes you might want to change the actual processed resolution due to power/efficiency considerations of the RealSense devices. width : Adjusts the final returned/resized width dimensions of the input camera stream height : Adjusts the final returned/resized height dimensions of the input camera stream Video Streaming For video streaming, you need this to be at least a baseWidth of 640 and a baseHeight of 360 starting out. bitrate : This is the quality of the video encoding [only applies to video streaming] HD Streaming For HD Streaming, RealSense requires a high bitrate of 3600000. This value has been tested to work well with control. odomCam : [ OPTIONAL ] This is a parameter that you must set if you want to use odom streaming for RealSense. If you have odomStreamCam setup in the main robotConfig.json , then you must also setup odomCam in realSenseConfig.json . This tells the setup to use a particular type of RealSense camera. For example: { \"test\" : true , \"testFilenames\" : [ \"../../test_videos/nus_left.mp4\" , \"../../test_videos/nus_center.mp4\" , \"../../test_videos/nus_right.mp4\" ], \"flipOptions\" : { \"0\" : [ false , false ], \"1\" : [ false , false ] }, \"baseWidth\" : 640 , \"baseHeight\" : 360 , \"codec\" : \"video\" , \"width\" : 320 , \"height\" : 240 , \"bitrate\" : 450000 \"odomCam\" : \"D455\" }","title":"Intel RealSense Configuration"},{"location":"sdk-config/realsense/#intel-realsense-configuration","text":"The config JSON for the robot, realSenseConfig.json , looks like this: { \"test\" : true , \"testFilenames\" : [ \"../../test_videos/nus_left.mp4\" , \"../../test_videos/nus_center.mp4\" , \"../../test_videos/nus_right.mp4\" ], \"flipOptions\" : { \"0\" : [ false , false ], \"1\" : [ false , false ] }, \"baseWidth\" : 640 , \"baseHeight\" : 360 , \"codec\" : \"video\" , \"width\" : 320 , \"height\" : 240 , \"bitrate\" : 450000 } test : This streams any attached hardware RealSense devices. Default is set to false . If you set test to true , then you can simulate camera streaming via provided custom mp4 video files specified as a list in testFilenames . flipOptions : This allows you to specific how you want to flip each camera (based on index) along the X and Y axes. The format is that of a map/table: { \"index\" : [ flipX, flipY] } codec : This has jpg or video options, with jpg being regular jpeg encoding (larger size but more stable) and video using VP9 encoding. baseWidth : Adjusts the processing width of the camera stream. baseHeight : Adjusts the processing height of the camera stream. Processed Resolution The video will be actually processed at this resolution before being resized via width and height . This means you can potentially have a higher/lower resolution for the actual processed camera stream vs the returned/final size. You need this because sometimes you might want to change the actual processed resolution due to power/efficiency considerations of the RealSense devices. width : Adjusts the final returned/resized width dimensions of the input camera stream height : Adjusts the final returned/resized height dimensions of the input camera stream Video Streaming For video streaming, you need this to be at least a baseWidth of 640 and a baseHeight of 360 starting out. bitrate : This is the quality of the video encoding [only applies to video streaming] HD Streaming For HD Streaming, RealSense requires a high bitrate of 3600000. This value has been tested to work well with control. odomCam : [ OPTIONAL ] This is a parameter that you must set if you want to use odom streaming for RealSense. If you have odomStreamCam setup in the main robotConfig.json , then you must also setup odomCam in realSenseConfig.json . This tells the setup to use a particular type of RealSense camera. For example: { \"test\" : true , \"testFilenames\" : [ \"../../test_videos/nus_left.mp4\" , \"../../test_videos/nus_center.mp4\" , \"../../test_videos/nus_right.mp4\" ], \"flipOptions\" : { \"0\" : [ false , false ], \"1\" : [ false , false ] }, \"baseWidth\" : 640 , \"baseHeight\" : 360 , \"codec\" : \"video\" , \"width\" : 320 , \"height\" : 240 , \"bitrate\" : 450000 \"odomCam\" : \"D455\" }","title":"Intel RealSense Configuration"},{"location":"sdk-config/robot-config/","text":"Robot Configuration The config JSON for the robot, robotConfig.json , looks like this: { \"serverAddress\" : \"localhost:50051\" , \"robotHostname\" : \"192.168.80.3\" , \"username\" : \"user5\" , \"camList\" : [ \"RealsenseCam\" ], \"payloads\" : [], \"dataStateLogFolder\" : \"C:/Users/kestr/Documents/Projects/robotDataState\" , \"ssl\" : true , \"fastServer\" : false , \"fastServerHostname\" : \"localhost:7777\" , \"secureDefaultToken\" : false , \"testMode\" : true , \"withAudio\" : false } serverAddress : The address of the spotServer in hostname:port format robotHostname : The hostname of the Spot Robot to connect to ( robot's IP ) username : The username to log into the Spot Robot camList : A list of cameras that are active for the current session i.e. RealsenseCam payloads : An optional payloads list, to be explained later dataStateLogFolder : A folder to write out the recorded msgpack data of the robot i.e. cameras, odom etc. ssl : This enables/disables secure SSL messaging fastServer : Described in the FastServer section below fastServerHostname : Described in the FastServer section below secureDefaultToken : This should always be set to False . Instead, use the <!TOKEN!> method in the Robot Rest Service to pass the auth token in testMode : Determines if the spotServer is in Test Mode ( ignores robot ) or not withAudio : Determines if audio streaming playback is enabled odomStreamCam : [ OPTIONAL ] A parameter you set if you want odometry to be retrieved not from the robot but from an on board camera that supports it. For example, for certain camera setups like Realsense , you will also need to configure which type of camera to use. Read the Intel Realsense section for more information.","title":"Robot Configuration"},{"location":"sdk-config/robot-config/#robot-configuration","text":"The config JSON for the robot, robotConfig.json , looks like this: { \"serverAddress\" : \"localhost:50051\" , \"robotHostname\" : \"192.168.80.3\" , \"username\" : \"user5\" , \"camList\" : [ \"RealsenseCam\" ], \"payloads\" : [], \"dataStateLogFolder\" : \"C:/Users/kestr/Documents/Projects/robotDataState\" , \"ssl\" : true , \"fastServer\" : false , \"fastServerHostname\" : \"localhost:7777\" , \"secureDefaultToken\" : false , \"testMode\" : true , \"withAudio\" : false } serverAddress : The address of the spotServer in hostname:port format robotHostname : The hostname of the Spot Robot to connect to ( robot's IP ) username : The username to log into the Spot Robot camList : A list of cameras that are active for the current session i.e. RealsenseCam payloads : An optional payloads list, to be explained later dataStateLogFolder : A folder to write out the recorded msgpack data of the robot i.e. cameras, odom etc. ssl : This enables/disables secure SSL messaging fastServer : Described in the FastServer section below fastServerHostname : Described in the FastServer section below secureDefaultToken : This should always be set to False . Instead, use the <!TOKEN!> method in the Robot Rest Service to pass the auth token in testMode : Determines if the spotServer is in Test Mode ( ignores robot ) or not withAudio : Determines if audio streaming playback is enabled odomStreamCam : [ OPTIONAL ] A parameter you set if you want odometry to be retrieved not from the robot but from an on board camera that supports it. For example, for certain camera setups like Realsense , you will also need to configure which type of camera to use. Read the Intel Realsense section for more information.","title":"Robot Configuration"},{"location":"setup/desktop-setup/","text":"Installing dependencies on the Desktop While most of the d.ASH SDK build is hermetic, some system dependencies are required - Linux Ubuntu 18.04 LTS and ROS Melodic . Ubuntu Installation Ubuntu is a complete Linux operating system, which will serve as the primary platform for ROS . Currently, the d.ASH SDK only supports Linux Ubuntu 18.04 LTS for development and simulation from your workstation. Ubuntu Installation via Bootable USB If you would like to install Ubuntu via a bootable USB, you can do so for both Windows and MacOS . Ubuntu Installation via Virtual Machine If you would like to install Ubuntu via a virtual machine , you can use VirtualBox to kickstart your installation process. Once Ubuntu is installed, check that your version of Ubuntu has the release code 18.04 . Open the terminal and type the command: $ lsb_release - a No LSB modules are available . Distributor ID : Ubuntu Description : Ubuntu 18.04 . 5 LTS Release : 18.04 Codename : bionic ROS Installation ROS (Robot Operating System) is a open-source framework that helps researchers and developers build and reuse code between robotics applications. Currently, the d.ASH SDK only supports ROS Melodic for development and simulation from your workstation. Once ROS is installed, check that your version of ROS is melodic . Open the terminal and type the command: $ rosversion -d melodic","title":"Installing Dependencies on the Desktop"},{"location":"setup/desktop-setup/#installing-dependencies-on-the-desktop","text":"While most of the d.ASH SDK build is hermetic, some system dependencies are required - Linux Ubuntu 18.04 LTS and ROS Melodic .","title":"Installing dependencies on the Desktop"},{"location":"setup/desktop-setup/#ubuntu-installation","text":"Ubuntu is a complete Linux operating system, which will serve as the primary platform for ROS . Currently, the d.ASH SDK only supports Linux Ubuntu 18.04 LTS for development and simulation from your workstation. Ubuntu Installation via Bootable USB If you would like to install Ubuntu via a bootable USB, you can do so for both Windows and MacOS . Ubuntu Installation via Virtual Machine If you would like to install Ubuntu via a virtual machine , you can use VirtualBox to kickstart your installation process. Once Ubuntu is installed, check that your version of Ubuntu has the release code 18.04 . Open the terminal and type the command: $ lsb_release - a No LSB modules are available . Distributor ID : Ubuntu Description : Ubuntu 18.04 . 5 LTS Release : 18.04 Codename : bionic","title":"Ubuntu Installation"},{"location":"setup/desktop-setup/#ros-installation","text":"ROS (Robot Operating System) is a open-source framework that helps researchers and developers build and reuse code between robotics applications. Currently, the d.ASH SDK only supports ROS Melodic for development and simulation from your workstation. Once ROS is installed, check that your version of ROS is melodic . Open the terminal and type the command: $ rosversion -d melodic","title":"ROS Installation"},{"location":"setup/file-org/","text":"File Organisation Autonomy map files have to be put in ~/.data/maps/{MAP_NAME} Within that folders there should be the following: {MAP_NAME}.pcd (3D map) {MAP_NAME}.json (Global planner config) {MAP_NAME}.png (2D Map version)","title":"File Organisation"},{"location":"setup/file-org/#file-organisation","text":"Autonomy map files have to be put in ~/.data/maps/{MAP_NAME} Within that folders there should be the following: {MAP_NAME}.pcd (3D map) {MAP_NAME}.json (Global planner config) {MAP_NAME}.png (2D Map version)","title":"File Organisation"},{"location":"setup/payload-reg/","text":"This section of the d.ASH SDK documentation provides details about setting up credentials for the d.ASH SDK. Information in this section includes the d.ASH server and the ROS driver credentials setup. d.ASH Server Credentials To setup the local credentials for the d.ASH server, you will need to by run the file: setServerPassNative . Run the following command replacing <username> with your chosen username and <password> with your chosen password. Please ensure that the username for the d.ASH server is the same as the one defined in the robot configuration file - robotConfig.json . $ ./setServerPassNative -u <username> -p <password> For example, if your username is user123 and your password is ilovedASH , your commands would look like this: $ ./ setServerPassNative - u user123 - p ilovedASH ROS Driver Credentials Before running the d.ASH SDK, please make sure your autonomy service credentials have been set up correctly. This means using the right username and the right password. To set up your credentials, run the following command replacing <username> with your chosen username and <password> with your chosen password. $ cd ./ setAutoCred / build $ ./ setAutonomyCred - u < username > < password > For example, if your username is user123 and your password is ilovedASH , your commands would look like this: $ cd ./ setAutoCred / build $ ./ setAutonomyCred - u user123 ilovedASH","title":"Payload Registration"},{"location":"setup/payload-reg/#dash-server-credentials","text":"To setup the local credentials for the d.ASH server, you will need to by run the file: setServerPassNative . Run the following command replacing <username> with your chosen username and <password> with your chosen password. Please ensure that the username for the d.ASH server is the same as the one defined in the robot configuration file - robotConfig.json . $ ./setServerPassNative -u <username> -p <password> For example, if your username is user123 and your password is ilovedASH , your commands would look like this: $ ./ setServerPassNative - u user123 - p ilovedASH","title":"d.ASH Server Credentials"},{"location":"setup/payload-reg/#ros-driver-credentials","text":"Before running the d.ASH SDK, please make sure your autonomy service credentials have been set up correctly. This means using the right username and the right password. To set up your credentials, run the following command replacing <username> with your chosen username and <password> with your chosen password. $ cd ./ setAutoCred / build $ ./ setAutonomyCred - u < username > < password > For example, if your username is user123 and your password is ilovedASH , your commands would look like this: $ cd ./ setAutoCred / build $ ./ setAutonomyCred - u user123 ilovedASH","title":"ROS Driver Credentials"},{"location":"setup/robot-setup/","text":"Installing dependencies on Robots Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. if (disk(windows_irq_wiki - 5 + 2, manet(yobibyte) - linkWinsStart(room_vpi, cable_t_web), desktopProgram)) { programOsiDdr(monochrome); } coreHover(firewireIcannCompact * https_autoresponder, ipv, session_bing_rosetta - beta_jre(frozenIbm, 125125)); address *= diskRiscSan.download_path(daemonTunnelingCell, workstation, boot_technology.program_peopleware(60 + 2)); spreadsheet_platform(perlTrash(soft(nocHdmi, platform_flash), minimizeCore + busCookie), driveDriver.joystickIo(tag(dmaVolume, 3))); compact = 54;","title":"Installing Dependencies on Robots"},{"location":"setup/robot-setup/#installing-dependencies-on-robots","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. if (disk(windows_irq_wiki - 5 + 2, manet(yobibyte) - linkWinsStart(room_vpi, cable_t_web), desktopProgram)) { programOsiDdr(monochrome); } coreHover(firewireIcannCompact * https_autoresponder, ipv, session_bing_rosetta - beta_jre(frozenIbm, 125125)); address *= diskRiscSan.download_path(daemonTunnelingCell, workstation, boot_technology.program_peopleware(60 + 2)); spreadsheet_platform(perlTrash(soft(nocHdmi, platform_flash), minimizeCore + busCookie), driveDriver.joystickIo(tag(dmaVolume, 3))); compact = 54;","title":"Installing dependencies on Robots"}]}